package com.example.dsalov2.simplenotifications;

import android.content.Intent;
import android.graphics.Typeface;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class AuthenticationActivity extends AppCompatActivity implements View.OnClickListener {
    EditText emailEditText;
    EditText passwordEditText;
    Button signInButton;
    Button createAccountButton;

    private FirebaseAuth authenticator;
    private FirebaseAuth.AuthStateListener authStateListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_authentication);

        emailEditText = (EditText) findViewById(R.id.emailEditText);
        passwordEditText = (EditText) findViewById(R.id.passwordEditText);
        signInButton = (Button) findViewById(R.id.signInButton);
        createAccountButton = (Button) findViewById(R.id.createAccountButton);

        passwordEditText.setTypeface(emailEditText.getTypeface());

        signInButton.setOnClickListener(this);
        createAccountButton.setOnClickListener(this);

        authenticator = FirebaseAuth.getInstance();

        authStateListener = new FirebaseAuth.AuthStateListener() {

            @Override
            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
                FirebaseUser user = firebaseAuth.getCurrentUser();

                if (user != null) {
                    Intent intent = new Intent(AuthenticationActivity.this, MainActivity.class);
                    startActivity(intent);
                }
            }
        };
    }

    /**
     * Determines what happens when buttons are clicked.
     *
     * @param view
     */
    @Override
    public void onClick(View view) {
        String email = emailEditText.getText().toString();
        String password = passwordEditText.getText().toString();

        //Button for signing in to an already-existing user account.
        if (view == signInButton) {
            signInAccount(email, password);
        }

        //Button for creating a new user account.
        if (view == createAccountButton) {
            createAccount(email, password);
        }
    }

    /**
     * Attaches the listener to the authenticator.
     */
    @Override
    public void onStart() {
        super.onStart();
        authenticator.addAuthStateListener(authStateListener);
    }

    /**
     * Removes the listener from the authenticator.
     */
    @Override
    public void onStop() {
        super.onStop();

        if (authStateListener != null) {
            authenticator.removeAuthStateListener(authStateListener);
        }
    }

    /**
     * Creates a new user account for them to sign in with in the future.
     *
     * @param email
     * @param password
     */
    public void createAccount(String email, String password) {
        authenticator.createUserWithEmailAndPassword(email, password)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {

                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {

                        if (!task.isSuccessful()) {
                            Toast.makeText(AuthenticationActivity.this,
                                    "You must provide a valid email.", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }

    /**
     * Signs in to an already-existing user account.
     *
     * @param email
     * @param password
     */
    public void signInAccount(String email, String password) {
        authenticator.signInWithEmailAndPassword(email, password)
            .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {

                @Override
                public void onComplete(@NonNull Task<AuthResult> task) {

                    if (!task.isSuccessful()) {
                        Toast.makeText(AuthenticationActivity.this,
                                "Invalid email or password.", Toast.LENGTH_SHORT).show();
                    }
                }
            });
    }
}
