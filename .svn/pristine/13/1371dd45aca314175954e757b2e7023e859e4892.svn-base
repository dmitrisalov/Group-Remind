package com.example.dsalov2.simplenotifications;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

/**
 * Created by dsalov2 on 4/10/2017.
 *
 * This is the activity that is used to create new reminders.
 */
public class ReminderActivity extends AppCompatActivity {
    Button createReminderButton;
    Switch setNotificationSwitch;
    TextView dateTextView;
    TextView timeTextView;
    EditText dateEditText;
    EditText timeEditText;
    EditText detailsEditText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_reminder);

        createReminderButton = (Button) findViewById(R.id.createReminderButton);
        setNotificationSwitch = (Switch) findViewById(R.id.setNotificationSwitch);
        dateTextView = (TextView) findViewById(R.id.dateTextView);
        timeTextView = (TextView) findViewById(R.id.timeTextView);
        dateEditText = (EditText) findViewById(R.id.dateEditText);
        timeEditText = (EditText) findViewById(R.id.timeEditText);
        detailsEditText = (EditText) findViewById(R.id.detailsEditText);

        dateTextView.setVisibility(View.INVISIBLE);
        timeTextView.setVisibility(View.INVISIBLE);
        dateEditText.setVisibility(View.INVISIBLE);
        timeEditText.setVisibility(View.INVISIBLE);

        //Determines what happens when the create button is pressed.
        createReminderButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {

                if (isValidDetails() && isValidDateTime()) {

                    Reminder reminder = createReminder();

                    //TODO pass reminder info to MainActivity.
                    finish();
                }
            }
        });

        //Determines what happens when the notification switch is checked or unchecked.
        setNotificationSwitch.setOnCheckedChangeListener(
                new CompoundButton.OnCheckedChangeListener() {

            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (isChecked) {
                    dateTextView.setVisibility(View.VISIBLE);
                    timeTextView.setVisibility(View.VISIBLE);
                    dateEditText.setVisibility(View.VISIBLE);
                    timeEditText.setVisibility(View.VISIBLE);
                }
                else {
                    dateTextView.setVisibility(View.INVISIBLE);
                    timeTextView.setVisibility(View.INVISIBLE);
                    dateEditText.setVisibility(View.INVISIBLE);
                    timeEditText.setVisibility(View.INVISIBLE);
                }
            }
        });
    }

    /**
     * TODO Check that the format is correct.
     * Displays a toast message if the provided details are invalid.
     *
     * @return true if the provided details are valid.
     */
    protected boolean isValidDetails() {

        if (detailsEditText.getText().toString().isEmpty()) {
            Toast.makeText(getApplicationContext(),
                    "You must provide details.", Toast.LENGTH_SHORT).show();

            return false;
        }

        return true;
    }

    /**
     * TODO Check that the format is correct.
     * Displays a toast message if the provided date and time are invalid.
     *
     * @return true if the provided date and time are valid.
     */
    protected boolean isValidDateTime() {

        if (setNotificationSwitch.isChecked()) {

            if (dateEditText.getText().toString().isEmpty() ||
                    timeEditText.getText().toString().isEmpty()) {
                Toast.makeText(getApplicationContext(),
                        "You must provide a valid date and time.",
                        Toast.LENGTH_SHORT).show();

                return false;
            }
        }

        return true;
    }

    /**
     * Creates a new reminder from the provided information.
     *
     * @return a Reminder object.
     */
    protected Reminder createReminder() {
        Reminder reminder;

        if (setNotificationSwitch.isChecked()) {
            reminder = new Reminder(detailsEditText.getText().toString(),
                    dateEditText.getText().toString(),
                    timeEditText.getText().toString());
        }
        else {
            reminder = new Reminder(detailsEditText.getText().toString());
        }

        return reminder;
    }

    /**
     * Creates an intent with the details of the reminder, passed to MainActivity.
     *
     * @param reminder
     */
    /*
    protected void passReminderToMain(Reminder reminder) {
        Intent i = new Intent(this, MainActivity.class);
        i.putExtra("REMINDER", reminder.getDetails());
    }
    */
}
