package com.example.dsalov2.simplenotifications;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

import java.util.Calendar;

/**
 * Created by dsalov2 on 4/10/2017.
 *
 * This is the activity that is used to create new reminders.
 */
public class ReminderActivity extends AppCompatActivity {
    Button createReminderButton;
    Switch setNotificationSwitch;
    TextView dateTextView;
    TextView timeTextView;
    EditText dateEditText;
    EditText timeEditText;
    EditText detailsEditText;

    AlarmManager alarmManager;
    Calendar calendar;
    PendingIntent pendingIntent;

    Reminder reminder;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_reminder);

        createReminderButton = (Button) findViewById(R.id.createReminderButton);
        setNotificationSwitch = (Switch) findViewById(R.id.setNotificationSwitch);
        dateTextView = (TextView) findViewById(R.id.dateTextView);
        timeTextView = (TextView) findViewById(R.id.timeTextView);
        dateEditText = (EditText) findViewById(R.id.dateEditText);
        timeEditText = (EditText) findViewById(R.id.timeEditText);
        detailsEditText = (EditText) findViewById(R.id.detailsEditText);

        dateTextView.setVisibility(View.INVISIBLE);
        timeTextView.setVisibility(View.INVISIBLE);
        dateEditText.setVisibility(View.INVISIBLE);
        timeEditText.setVisibility(View.INVISIBLE);

        alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);
        calendar = Calendar.getInstance();

        final Intent intent = new Intent(ReminderActivity.this, AlarmReceiver.class);

        createReminderButton.setOnClickListener(new View.OnClickListener() {

            //Goes back to MainActivity and updates the list of reminders.
            @Override
            public void onClick(View v) {

                if (isValidDetails() && isValidDateTime()) {
                    reminder = createReminder();
                    addReminderToList();

                    //Sets an alarm only if the user specified to do so.
                    if (setNotificationSwitch.isChecked()) {

                        calendar.set(Calendar.YEAR, reminder.getYear());
                        calendar.set(Calendar.DAY_OF_MONTH, reminder.getDayOfMonth());
                        calendar.set(Calendar.MONTH, reminder.getMonth());
                        calendar.set(Calendar.HOUR_OF_DAY, reminder.getHourOfDay());
                        calendar.set(Calendar.MINUTE, reminder.getMinute());

                        //Creates pending intent that delays the intent until the specified calendar time.
                        pendingIntent = PendingIntent.getBroadcast(ReminderActivity.this, 0,
                                intent, PendingIntent.FLAG_UPDATE_CURRENT);

                        //Sets the alarm manager to the specified calendar time.
                        alarmManager.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pendingIntent);
                    }

                    finish();
                }
            }
        });

        //Determines what happens when the notification switch is checked or unchecked.
        setNotificationSwitch.setOnCheckedChangeListener(
                new CompoundButton.OnCheckedChangeListener() {

            //Catches when the switch is used.
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {

                if (isChecked) {
                    dateTextView.setVisibility(View.VISIBLE);
                    timeTextView.setVisibility(View.VISIBLE);
                    dateEditText.setVisibility(View.VISIBLE);
                    timeEditText.setVisibility(View.VISIBLE);
                }
                else {
                    dateTextView.setVisibility(View.INVISIBLE);
                    timeTextView.setVisibility(View.INVISIBLE);
                    dateEditText.setVisibility(View.INVISIBLE);
                    timeEditText.setVisibility(View.INVISIBLE);
                }
            }
        });
    }

    /**
     * TODO Check that the format is correct.
     * Displays a toast message if the provided details are invalid.
     *
     * @return true if the provided details are valid.
     */
    protected boolean isValidDetails() {

        if (detailsEditText.getText().toString().isEmpty()) {
            Toast.makeText(getApplicationContext(),
                    "You must provide details.", Toast.LENGTH_SHORT).show();

            return false;
        }

        return true;
    }

    /**
     * TODO Check that the format is correct.
     * Displays a toast message if the provided date and time are invalid.
     *
     * @return true if the provided date and time are valid.
     */
    protected boolean isValidDateTime() {

        if (setNotificationSwitch.isChecked()) {

            if (dateEditText.getText().toString().isEmpty() ||
                    timeEditText.getText().toString().isEmpty()) {
                Toast.makeText(getApplicationContext(),
                        "You must provide a valid date and time.",
                        Toast.LENGTH_SHORT).show();

                return false;
            }
        }

        return true;
    }

    /**
     * Creates a new reminder from the provided information.
     *
     * @return a Reminder object.
     */
    protected Reminder createReminder() {
        Reminder reminder;

        if (setNotificationSwitch.isChecked()) {
            reminder = new Reminder(detailsEditText.getText().toString(),
                    dateEditText.getText().toString(),
                    timeEditText.getText().toString());
        }
        else {
            reminder = new Reminder(detailsEditText.getText().toString());
        }

        return reminder;
    }

    /**
     * Adds the reminder details to the reminders list in MainActivity.
     */
    protected void addReminderToList() {
        MainActivity.remindersList.add(reminder.getDetails());
    }

    protected void setReminderAlarm() {



    }
}
